
declare
{
	int a;
        int x,y;
        float xx,yy;
} 

cubbyhole testing
{
	test_reset();

	testeqf(2,2);
	testeqi(2,2);	
	testeqi(2,2.2);	
	testeqf(3.1, 2+1.1);
	testeqi(3, 2+1.1);
	testeqi(3.0, 2+1.1);

	testeqf(2, 1+1.0);
	testeqf(2, 1.0+1);
	testeqi(2, 1.0+1);
	testeqf(1, 1*1.0);
	testeqf(1, 1.0*1);
	testeqi(1, 1.0*1);

	testeqi(-1, 0 - 1);
	testeqi(-1, 0-(1));
	testeqi(-1, 0-1);
	testeqf(-1.5,- 1.5);
	testeqf(.1 , 1.1 - 1.0);
	testeqf(0.00001, 0.000010000);
	testeqf(0.00001, 3.1 - 3.09999);
	testeqi(3, 3.1+.111);
	testeqf( -.5, - 1 + 0.5);
	testeqf(4.8, 2*2.4);
	testeqf(5.2, 2*2.6);
	testeqi(5, 2*2.6);

	// Unary minus
	testeqi(0-10, -(5+5));
	testeqi(-10, -(5+5));
	testeqf(-10, -(5+5));

	// Division	
	testeqi(2, 4/2);
	testeqi(2, 5/2);
	testeqf(2.5, 5.0/2);

	// Brackets
	testeqi(10, 2*(2+3));
	testeqf(10, 2*(2+3));
	testeqf(10, 2*(2.0+3));
	testeqf(11, 1+2*(2+3));

	// Max, min
	testeqi(5, max(1,5));
	testeqi(5, max(5,1));
	testeqi(5, max(1,5.1));
	testeqi(1, min(5,1));
	testeqi(1, max(-5,1));
	testeqi(0, max(-5,0));
	testeqi(-4, max(-5,-4));
	testeqf(-4, maxf(-5,-4));
	testeqi(-4, max(-4,-5));	
	testeqf(-4, max(-4,-5));	
	testeqi(-5, min(-5,-4));
	testeqf(-5, minf(-5,-4));

        // variables
        // For ints
        x = 1;
        y=2;
        testeqi(3, x+y);
        testeqi(-1, x-y);
        testeqi(1, y-x);

        testeqi(2, x*y);
        testeqi(2, 1*y);
        testeqi(1, y/y);
        testeqi(1, y/2);
        testeqi(2, 5/y);
        testeqi(5, 5/x);

        testeqi(0, 4%2);
        testeqi(1, 5%2);

        // For floats
        xx = 1;
        yy = 2.0;
        testeqf(3.0, x+y);
        testeqf(-1.0, x-y);
        testeqf(1.0, y-x);

        testeqf(2.0, x*y);
        testeqf(2.0, 1.0*y);
        testeqf(1.0, y/y);
        testeqf(1.0, y/2.0);
        testeqf(2.5, 5.0/y);
        testeqf(5.0, 5.0/x);

        testeqf(0.0, 4.0%2.0);
        testeqf(1.0, 5.0%2.0);


        testeqi(5, 1+2*2);         
        testeqi(5, 2*2+1);         
        testeqi(5, (2*2)+1);         


        testeqi(0, 2*2+1<1);  
        testeqi(1, !1<1);
        testeqi(0, 1<!1);
        testeqi(1, !-1<1);

        testeqi(0, 1==1<1);
        testeqi(0, 1<1==1);

        testeqi(1, 1|0);
        testeqi(3, 2|1);
        testeqi(3, 3|3);
        testeqi(0, 2&1);
        testeqi(2, 2&3);
        testeqi(3, 3&3);

        testeqi(1, 2 >>1);
        testeqi(1, 3 >>1);
        testeqi(2, 2 >>0);
        testeqi(1, 2 >>1);

        testeqi(4, 2 <<1);
        testeqi(16, 1 <<4);
        testeqi(6, 3 <<1);
        testeqi(3, 3 <<0);


        a = 10;
        a+=1;
        testeqi(11, a);
        a+=-3;
        testeqi(8, a);
        a/=2;
        testeqi(4, a);
        a*=2.5;
        testeqi(10, a);
        a%=3;
        testeqi(1, a);

        a=1;
        testeqi(1, a);
        a++;
        testeqi(2, a);  
        a--;
        testeqi(1, a);
        ++a;
        testeqi(2, a);
        --a;
        testeqi(1, a);
        
        xx=1;
        xx++;
        testeqf(2, xx);  
        xx--;
        testeqf(1, xx);
        ++xx;
        testeqf(2, xx);
        --xx;
        testeqf(1, xx);

        a=1;
        testeqi(1,a++);
        testeqi(2,a);
        testeqi(3,++a);
        testeqi(3,a);

        testeqi(3,a--);
        testeqi(2,a);
        testeqi(1,--a);
        testeqi(1,a);

	test_summary();
} 

